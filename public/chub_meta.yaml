# All of these fields are optional, as is this file itself,
#   in which case these values can be managed in the UI.

# The name of the stage.
project_name: "Boss Mode"

# A short tagline to show in search.
tagline: "Take control with []s."

creator_notes: "Want to tell the LLM how to do its job? This stage takes your bracketed instructions and turns them into \"stage directions,\" which are higher-priority instructions that are not directly attributed to the user's input. 
Simply search for and add this stage to your chat from Chat Settings and you'll be able to leverage this feature in your input. 
<br>
<br>
Stage Direction Advantages:
<ul>
<li>More likely to be honored by the LLM.
<li>Less likely to be mimicked by the LLM (because it isn't presented alongside narrative input).
<li>Cleaner input.
<li>Falls out of context for future requests.
</ul>

For example, if you write, 
\"`I give {{char}} a friendly wave. [{{char}} should ignore {{user}}}}.]`\" 
then your input will appear as \"`I give {{char}} a friendly wave.`\" and the LLM will also receive \"`[RESPONSE INSTRUCTION]{{char}} should ignore {{user}}.[/RESPONSE INSTRUCTION]`\" at the end of the prompt, 
which should help the LLM better adhere to this instruction. The stage supports multiple notes per input and also ignores brackets followed by parens, to avoid breaking markdown links.
<br>
<br>
Regarding the final bulletpoint above, stage directions are only applied to the immediate responses to that input. This keeps irrelevant instructions from eating up context, but it may be counter-intuitive; 
if you provide instructions that are not fully executed in the next response, you may have to provide continued instruction in the following input.
<br>
<br>
This is an incredibly simple quality-of-life stage that I felt some folks might like to be able to drop into their chats. Let me know if you have any issues or suggestions. Thanks!"

# 'PUBLIC', 'PRIVATE', or 'UNLISTED'.
visibility: 'PUBLIC'

# 'ADJACENT' | 'NONE' | 'COVER' | 'FULLSCREEN'
# 'ADJACENT' is default. The frame will display on the side of the
#   chat on desktop and above/in the top half of the chat on mobile.
# 'NONE' will not display, only run.
# 'COVER' will, indeed, cover the chat history completely,
#   but leave the text input box.
# 'FULLSCREEN' will make nothing below the header bar
#   show except for your stage.
position: 'NONE'

# Self-explanatory.
tags:
 - 'Stage'
 - 'Add-on'
 - 'Utility'
 - 'SFW'

# The schema of any user-supplied config.
# If your stage requires a configuration but has no
#   defined schema, it won't work.
config_schema:
  type: object
  properties:
    debugMode:
      type: boolean
      default: false

# The schema of the state that you store.
# This isn't needed even if you do store state,
#   and is here more for future use cases to
#   optimize storage.
state_schema:
  init:
    type: object
    properties:
      grid:
        type: string
  message:
    type: object
    properties:
      angry:
        type: boolean
        default: true
  chat:
    type: object
    properties:
      visited:
        type: array
        items:
          type: integer

# Whether to publish as 'Anonymous' instead of under your username.
# is_anonymous: false

# Self-explanatory.
# ratings_disabled: false

# This is here for future cases where ex. you need user secrets,
#    but currently does nothing.
# permissions:

# extension_id is automatically generated on push with a new project;
#    you should not make or set this value.
# github_path will be added if it does not exist. It is the URL of the repo.



github_path: 'https://github.com/Lord-Raven/boss-mode'


extension_id: 'boss-mode-cfb0b7d36b1e'

