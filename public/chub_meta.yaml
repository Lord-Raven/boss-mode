# All of these fields are optional, as is this file itself,
#   in which case these values can be managed in the UI.

# The name of the stage.
project_name: "Boss Mode"

# A short tagline to show in search.
tagline: "Take control with []s."

creator_notes: "This is a simple stage that strips any input found in brackets [] and sends it to the the LLM as \"stage directions,\" which are higher-priority instructions that are not directly attributed to the user's input. 
Simply add this stage to your chat from Chat Settings and you'll be able to leverage this feature with any input. 
<br>
<br>
By removing these notes from the user's input and providing them later in the prompt, we not only elevate their efficacy, but also avoid teaching the LLM that it should include similar notes in its responses. 
It also means that these instruction drops from context following the next response, which could be a pro or a con, depending on what you are trying to achieve--
I tend to think it is a pro for most situations (you don't want chat history to fill up with lots of moment-to-moment instruction), 
but bear in mind that if you provide instruction that the bot does not achieve in a single response, the bot will no longer see that instruction in future responses.
<br>
<br>
This is an incredibly simple quality-of-life stage that I felt some folks might like to be able to drop into their chats. Let me know if you have any issues or suggestions. Thanks!"

# 'PUBLIC', 'PRIVATE', or 'UNLISTED'.
visibility: 'PUBLIC'

# 'ADJACENT' | 'NONE' | 'COVER' | 'FULLSCREEN'
# 'ADJACENT' is default. The frame will display on the side of the
#   chat on desktop and above/in the top half of the chat on mobile.
# 'NONE' will not display, only run.
# 'COVER' will, indeed, cover the chat history completely,
#   but leave the text input box.
# 'FULLSCREEN' will make nothing below the header bar
#   show except for your stage.
position: 'NONE'

# Self-explanatory.
tags:
 - 'Stage'
 - 'Add-on'
 - 'Utility'
 - 'SFW'

# The schema of any user-supplied config.
# If your stage requires a configuration but has no
#   defined schema, it won't work.
config_schema:
  type: object
  properties:
    debugMode:
      type: boolean
      default: false

# The schema of the state that you store.
# This isn't needed even if you do store state,
#   and is here more for future use cases to
#   optimize storage.
state_schema:
  init:
    type: object
    properties:
      grid:
        type: string
  message:
    type: object
    properties:
      angry:
        type: boolean
        default: true
  chat:
    type: object
    properties:
      visited:
        type: array
        items:
          type: integer

# Whether to publish as 'Anonymous' instead of under your username.
# is_anonymous: false

# Self-explanatory.
# ratings_disabled: false

# This is here for future cases where ex. you need user secrets,
#    but currently does nothing.
# permissions:

# extension_id is automatically generated on push with a new project;
#    you should not make or set this value.
# github_path will be added if it does not exist. It is the URL of the repo.



github_path: 'https://github.com/Lord-Raven/boss-mode'


extension_id: 'boss-mode-cfb0b7d36b1e'

